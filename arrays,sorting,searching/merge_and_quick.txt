Merge 
----------

public static int[] Met(int []a){
get(a,0,a.length);
return a;
}
public static int [] get(int a[],int l,int h){
int n=h-l;
if(n<=1)
return a;
int m=l+n/2;
get(a,l,m);
get(a,m,h);
int t[]=new int[n];
int i=l,j=m;

for(int k=0;k<n;k++){
if(i==m)
t[k]=a[j++];
else if(j==h)
t[k]=a[i++];
else if(a[j]<a[i])
t[k]=a[j++];
else
t[k]=a[i++];

}
for(int k=0;k<n;k++)
a[l+k]=t[k];

return a; 
}

==================================================================

quick sort
------------

public static int[] Met(int[] a){
quick(a,0,a.length-1);
return a;
}
public static void quick(int arr[], int low, int high) 
    {
        int i = low, j = high;
        int temp;
        int pivot = arr[(low + high) / 2];
 
        
        while (i <= j) 
        {
            while (arr[i] < pivot)
                i++;
            while (arr[j] > pivot)
                j--;
            if (i <= j) 
            {
               
                temp = arr[i];
                arr[i] = arr[j];
                arr[j] = temp;
 
                i++;
                j--;
            }
        }
 
        if (low < j)
            quick(arr, low, j);
      
        if (i < high)
            quick(arr, i, high);
    }